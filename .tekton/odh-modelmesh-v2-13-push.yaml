apiVersion: tekton.dev/v1
kind: PipelineRun
#retest
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/rhoai-rhtap/modelmesh?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch
      == "rhoai-2.13"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: rhoai-v2-13
    appstudio.openshift.io/component: odh-modelmesh-v2-13
    pipelines.appstudio.openshift.io/type: build
  name: odh-modelmesh-v2-13-on-push
  namespace: rhoai-tenant
spec:
  timeouts:
    pipeline: 4h
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/rhoai/odh-modelmesh-rhel8:{{target_branch}}
  - name: dockerfile
    value: Dockerfile
  - name: path-context
    value: .
  - name: prefetch-input
    value: rpm
  - name: build-config-git-url
    value: 'https://github.com/rhoai-rhtap/RHOAI-Build-Config.git'
  - name: build-config-revision
    value: 'rhoai-2.13'
  - name: build-config-path
    value: 'odh-pig-builds/build-config.yaml'
  - name: pnc-cli-config-git-url
    value: 'https://gitlab.cee.redhat.com/project-ncl/utils.git'
  - name: pnc-cli-config-revision
    value: 'master'
  - name: pnc-profile
    value: 'prod'
  pipelineSpec:
    finally:
    - name: show-sbom
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      taskRef:
        params:
        - name: name
          value: show-sbom
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:9bfc6b99ef038800fe131d7b45ff3cd4da3a415dd536f7c657b3527b01c4a13b
        - name: kind
          value: task
        resolver: bundles
    - name: show-summary
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: git-url
        value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
      - name: image-url
        value: $(params.output-image)
      - name: build-task-status
        value: $(tasks.build-image-index.status)
      taskRef:
        params:
        - name: name
          value: summary
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:d97c04ab42f277b1103eb6f3a053b247849f4f5b3237ea302a8ecada3b24e15b
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: workspace
        workspace: workspace
      - name: pnc
        workspace: workspace
    params:
    - name: build-config-git-url
      description: Source Repository URL containing the build configuration
      type: string
    - name: build-config-revision
      default: ""
      description: Revision of the Source Repository containing the build configuration
      type: string
    - name: build-config-path
      default: "build-config.yaml"
      description: Full path of the build configuration file
      type: string
    - description: Source Repository URL containing the PNC CLI configuration
      name: pnc-cli-config-git-url
      type: string
    - default: ""
      description: Revision of the Source Repository containing the PNC CLI configuration
      name: pnc-cli-config-revision
      type: string
    - name: pnc-profile
      value: 'prod'
      
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: Path to the source code of an application's component from where
        to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter
        path-context
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "true"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like
        1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    - default: "false"
      description: Build a source image.
      name: build-source-image
      type: string
    - default: "false"
      description: Add built image into an OCI image index
      name: build-image-index
      type: string
    - default: []
      description: Array of --build-arg values ("arg=value" strings) for buildah
      name: build-args
      type: array
    - default: ""
      description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
      name: build-args-file
      type: string
    results:
    - description: ""
      name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - description: ""
      name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - description: ""
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ""
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:092c113b614f6551113f17605ae9cb7e822aa704d07f0e37ed209da23ce392cc
        - name: kind
          value: task
        resolver: bundles
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:0bb1be8363557e8e07ec34a3c5daaaaa23c9d533f0bb12f00dc604d00de50814
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: clone-build-config-repository
      params:
      - name: url
        value: $(params.build-config-git-url)
      - name: revision
        value: $(params.build-config-revision)
      - name: subdirectory
        value: build-config
      - name: sslVerify
        value: false
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:0bb1be8363557e8e07ec34a3c5daaaaa23c9d533f0bb12f00dc604d00de50814
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth

    - name: clone-pnc-cli-config-repository
      params:
      - name: url
        value: $(params.pnc-cli-config-git-url)
      - name: revision
        value: $(params.pnc-cli-config-revision)
      - name: subdirectory
        value: cli-config
      - name: sslVerify
        value: false
      runAfter:
      - clone-build-config-repository
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:0bb1be8363557e8e07ec34a3c5daaaaa23c9d533f0bb12f00dc604d00de50814
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    
    - name: pnc-cli-build
      runAfter:
        - clone-pnc-cli-config-repository
      taskSpec:
        results:
          - description: The file containing the list of pnc built artifacts to be later installed inside the container build
            name: pnc-file-list
        steps:
          - name: run-pnc-build
            image: quay.io/redhat-user-workloads/konflux-jbs-pnc-tenant/pnc/pnc-cli:48a761b5093bc474850b2ebcf06641825940deb7
            env:
              - name: SSO_SERVICE_ACCOUNT_NAME
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: svc.account.username
              - name: SSO_SERVICE_ACCOUNT_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: svc.account.password
              - name: PNC_PROFILE
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: pnc.profile
              
            script: |
              #!/bin/bash
              set -e

              echo -e "\n=== Build config ==="
              cat /workspace/output/build-config/$(params.build-config-path)
              cp /workspace/output/build-config/$(params.build-config-path) /workspace/output
              echo -e "===================="

              echo -e "\nReplacing credentials in the CLI config ..."
              envsubst '${SSO_SERVICE_ACCOUNT_NAME} ${SSO_SERVICE_ACCOUNT_CLIENT_SECRET}' < /workspace/output/cli-config/konflux/configs/pnc_cli/config.yaml > /workspace/output/config.yaml

              echo -e "\nStarting the PNC build ..."
              PNC_CLI_OUTPUT_FILE="/workspace/output/pnc-cli-run-output.json"
              java -jar /home/jboss/bacon.jar pig run --mode=FORCE --downloadAttempts=3 /workspace/output -p /workspace/output --profile ${PNC_PROFILE} --jsonOutput > $PNC_CLI_OUTPUT_FILE

              echo -e "\nFinished the PNC build!"
              echo -e "\n=== PNC build output ==="
              cat $PNC_CLI_OUTPUT_FILE
              echo -e "===================="

              echo -e "\nGetting the list of built files (to be used later in the container build) ..."
              jq '[.builds[].builtArtifacts[]?.downloadUrl ]' "$PNC_CLI_OUTPUT_FILE" > "$(results.pnc-file-list.path)"

              cat  $(results.pnc-file-list.path)

              echo -e "\nGetting the list of built files (to be used later in the container build) ..."
              jq '[.builds[].builtArtifacts[]?.downloadUrl]' "$PNC_CLI_OUTPUT_FILE" > "$(workspaces.output.path)/pnc-file-list.json"   

              echo -e "\nDebug: List of built artifacts (URLs) extracted from PNC CLI output:"
              cat $(results.pnc-file-list.path)

      workspaces:
      - name: output
        workspace: workspace
        
    - name: download-pnc-files
      runAfter:
        - pnc-cli-build
      taskSpec:
        results:
          - description: The file containing the list of pnc built artifacts to be later installed inside the container build
            name: pnc-file-list
          #- description: The file containing the list of pnc built artifacts to be later installed inside the container build
            #name: pnc-zip-file
          #- description: The file containing the list of pnc built artifacts to be later installed inside the container build
            #name: pnc-pom-file
        steps:
          - name: run-pnc-download
            image: quay.io/rhoai/rhoai-task-toolset:latest
            env:
              - name: SSO_SERVICE_ACCOUNT_NAME
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: svc.account.username
              - name: SSO_SERVICE_ACCOUNT_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: svc.account.password
              - name: PNC_PROFILE
                valueFrom:
                  secretKeyRef:
                    name: pnc-secret
                    key: pnc.profile
            script: |
              #!/bin/bash
              set -e

              #PNC_FILE_LIST_PATH="$(results.pnc-file-list.path)"


              # Use the correct path for the pnc-file-list.json created by the previous task
              PNC_FILE_LIST_PATH="$(workspaces.output.path)/pnc-file-list.json"  # Changed to output

              # Download artifacts into the 'source' workspace
              ARTIFACTS_DIR="$(workspaces.source.path)/pnc-artifacts"
              
              # Ensure the artifacts directory exists
              mkdir -p "$ARTIFACTS_DIR"
              
              echo -e "\n=== Downloading artifacts from PNC ==="
              if [ -f "$PNC_FILE_LIST_PATH" ]; then
                  cat "$PNC_FILE_LIST_PATH" | jq -r '.[]' | \
                  while read -r url; do 
                      echo "Downloading from $url..."
                      wget --no-check-certificate "$url" -P "$ARTIFACTS_DIR"; 
                  done
              else
                  echo "Error: PNC file list does not exist at $PNC_FILE_LIST_PATH"
                  exit 1
              fi
              
              # Verify downloaded files
              echo -e "\nVerifying downloaded files in $ARTIFACTS_DIR..."
              ls -l "$ARTIFACTS_DIR"
              
              # Check if any ZIP files were downloaded
              if ls "$ARTIFACTS_DIR"/*.zip 1> /dev/null 2>&1; then
                  echo -e "\nAll ZIP files have been downloaded into $ARTIFACTS_DIR"
              else
                  echo -e "Error: No ZIP files were downloaded from PNC!"
                  exit 1  # Exit if no ZIP files are found
              fi

              # Verify downloaded files
              echo -e "\nVerifying downloaded files in $ARTIFACTS_DIR..."
              ls -l "$ARTIFACTS_DIR"
              
              echo -e "\nContents of $ARTIFACTS_DIR after downloads:"
              ls -la "$ARTIFACTS_DIR"


      workspaces:
      - name: source
        workspace: workspace
      - name: output
        workspace: workspace
    - name: prefetch-dependencies
      params:
      - name: input
        value: $(params.prefetch-input)
      - name: dev-package-managers
        value: "true"
      runAfter:
      - download-pnc-files
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.1@sha256:fd1fda0dcf53938860ae6fcba37f5572ae25ae02dba44c15754fb7ba7549fb5c
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.prefetch-input)
        operator: notin
        values:
        - ""
      workspaces:
      - name: source
        workspace: workspace
      - name: git-basic-auth
        workspace: git-auth
      - name: netrc
        workspace: netrc
    - name: build-container
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: BUILD_ARGS
        value:
        - PNC_FILES_JSON=$(tasks.pnc-cli-build.results.pnc-file-list)
        - PNC_ARTIFACTS_DIR=$(workspaces.source.path)/pnc-artifacts
        - $(params.build-args[*])
       # - PNC_ZIP_FILE=$(echo $PNC_FILES_JSON | jq -r '.[] | select(test("\\.zip$"))')
        #- PNC_POM_FILE=$(echo $PNC_FILES_JSON | jq -r '.[] | select(test("\\.pom$"))')
      - name: BUILD_ARGS_FILE
        value: $(params.build-args-file)
      runAfter:
      - prefetch-dependencies
      taskRef:
        params:
        - name: name
          value: buildah
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.2@sha256:a523f60203d90e149f96ec776b47ce85a7acfd6d634ddfc18f4a03f14e08ea0e
        - name: kind
          value: task
        resolver: bundles
      timeout: "0"
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace
    - name: build-image-index
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: ALWAYS_BUILD_INDEX
        value: $(params.build-image-index)
      - name: IMAGES
        value:
        - $(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: build-image-index
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:18eecec92fcdb96dc346aecbbe88fb5fd95e34ee6ef4ad714dc1303723a8e4ea
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
    - name: build-source-image
      params:
      - name: BINARY_IMAGE
        value: $(params.output-image)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: source-build
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-source-build:0.1@sha256:21cb5ebaff7a9216903cf78933dc4ec4dd6283a52636b16590a5f52ceb278269
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      - input: $(params.build-source-image)
        operator: in
        values:
        - "true"
      workspaces:
      - name: workspace
        workspace: workspace
    - name: deprecated-base-image-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: deprecated-image-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.4@sha256:d98fa9daf5ee12dfbf00880b83d092d01ce9994d79836548d2f82748bb0c64a2
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: clair-scan
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: clair-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.1@sha256:baea4be429cf8d91f7c758378cea42819fe324f25a7f957bf9805409cab6d123
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: ecosystem-cert-preflight-checks
      params:
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: ecosystem-cert-preflight-checks
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.1@sha256:5131cce0f93d0b728c7bcc0d6cee4c61d4c9f67c6d619c627e41e3c9775b497d
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: sast-snyk-check
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: sast-snyk-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check:0.2@sha256:82c42d27c9c59db6cf6c235e89f7b37f5cdfc75d0d361ca0ee91ae703ba72301
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      workspaces:
      - name: workspace
        workspace: workspace
    - name: clamav-scan
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: clamav-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.1@sha256:0e61e7fce97b089b216eccd8390b1c2a265454c81c6630449e0f648dfcd4fcfe
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: apply-tags
      params:
      - name: IMAGE
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: ADDITIONAL_TAGS
        value: 
          - '{{target_branch}}-{{revision}}'
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: apply-tags
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.1@sha256:e6beb161ed59d7be26317da03e172137b31b26648d3e139558e9a457bc56caff
        - name: kind
          value: task
        resolver: bundles
    - name: push-dockerfile
      params:
      - name: IMAGE
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: push-dockerfile
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-push-dockerfile:0.1@sha256:92d63edd09636f97961ca18fac14b67935179d2c14b4a4d5f8087c614e8c2bd9
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: workspace
        workspace: workspace
    workspaces:
    - name: workspace
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
